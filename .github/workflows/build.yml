name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ~/.dotnet/tools
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Setup .NET and add tools to PATH
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'

      - name: Verify installation and path
        run: dotnet tool list -g

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"VladGanuscheak_ActionConditionalChecker.Contracts" /o:"vlad-ganuscheak" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          
          cd ActionConditionalChecker.Contracts
          dotnet restore
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          
          dotnet build --configuration Release
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
          
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
